on: push
name: Flutter
env:
  GCS_PATH: gs://flutterttdemo/${{ github.sha }}
  GCS_URL: https://storage.googleapis.com/flutterttdemo/${{ github.sha }}
  GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
  JAVA_VERSION: 12.x
  SCRIPT_EXTRACT_CONFIG: |
    set -ex

    brew install yq

    _appVersion=$( yq read pubspec.yaml version )
    _appVersionWithoutNumber=$( echo "${_appVersion}" | sed 's/+.*$//' )
    echo "::set-env name=BUILD_NAME::${_appVersionWithoutNumber}-${GITHUB_SHA:0:7}"

    _flutterVersion=$( yq read pubspec.yaml environment.flutter )
    echo "::set-env name=FLUTTER_VERSION::${_flutterVersion}"

jobs:
  build_apk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: git submodule update --init --recursive
      - name: Unlock git-crypt
        uses: sliteteam/github-action-git-crypt-unlock@1.0.2
        env:
          GIT_CRYPT_KEY: ${{ env.GIT_CRYPT_KEY }}
      - name: Extract config from pubspec.yaml
        run: echo "${SCRIPT_EXTRACT_CONFIG}" | bash -

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - name: Setup gsutil
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_UPLOADER_SA_KEY }}

      - run: flutter pub get

      - name: build apk
        run: |
          set -e

          flutter build apk "--build-name=${BUILD_NAME}" --split-per-abi
          gsutil cp build/app/outputs/apk/release/*.apk "${GCS_PATH}/apk"

      - name: Dump environment variables
        run: |
          set -e

          { \
            echo "BUILD_NAME=${BUILD_NAME}"; \
            echo "FLUTTER_VERSION=${FLUTTER_VERSION}"; \
            echo "JAVA_VERSION=${JAVA_VERSION}"; \
          } | gsutil cp - "${GCS_PATH}/apk.env"

  build_ipa:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        if: startsWith(github.ref, 'refs/heads/ios') || github.ref == 'refs/heads/master'
      - run: git submodule update --init --recursive
      - name: Unlock git-crypt
        run: |
          set -e

          brew install git-crypt

          # https://github.com/sliteteam/github-action-git-crypt-unlock/blob/master/entrypoint.sh
          echo "${GIT_CRYPT_KEY}" | base64 --decode > ./git-crypt-key
          git-crypt unlock ./git-crypt-key
          rm ./git-crypt-key
      - name: Extract config from pubspec.yaml
        run: echo "${SCRIPT_EXTRACT_CONFIG}" | bash -

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - name: Setup gsutil
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_UPLOADER_SA_KEY }}

      - run: flutter pub get

      - name: build ios
        run: |
          set -e

          flutter build ios "--build-name=${BUILD_NAME}" --no-codesign
          ( cd ios && fastlane ipa )

          echo "<script>location='itms-services://?action=download-manifest&url='+encodeURIComponent('${GCS_URL}/ipa/manifest.plist');</script>" \
            >build/app/outputs/ipa/release/redirect.html
          gsutil cp build/app/outputs/ipa/release/* "${GCS_PATH}/ipa"

      - name: Dump environment variables
        run: |
          set -e

          { \
            xcodebuild -version; \
            cat ios/Flutter/Generated.xcconfig | grep BUILD_NUMBER; \
            echo "FLUTTER_VERSION=${FLUTTER_VERSION}"; \
          } | gsutil cp - "${GCS_PATH}/ipa.env"

    # the checkout step has a `if` to prevent it from running in the wrong branch
    # the job is configured to continue on error to let `comment` job to work
    continue-on-error: true

  comment:
    needs:
      - build_ipa
      - build_apk
    runs-on: ubuntu-latest

    steps:
      - name: Setup gsutil
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_UPLOADER_SA_KEY }}
      - name: Prepare markdown
        id: markdown
        run: |
          set -e

          _message=''

          _envApk=$( gsutil cat "${GCS_PATH}/apk.env" || true )
          if [ ! -z "${_envApk}" ]; then
            _apk=$( \
              gsutil ls "${GCS_PATH}/apk" \
              | xargs -n 1 basename \
              | xargs -n 1 -I {} printf -- "- [%s](${GCS_URL}/apk/%s)\n" {} {} \
            )

            _message=$( printf "## Android builds\n%s\n\n\`\`\`\n%s\n\`\`\`\n" "${_apk}" "${_envApk}" )
          fi

          _envIpa=$( gsutil cat "${GCS_PATH}/ipa.env" || true )
          if [ ! -z "${_envIpa}" ]; then
            _message=$( printf "%s## iOS build\n[manifest.plist](%s)\n\n\`\`\`\n%s\n\`\`\`\n" "${_message}" "${GCS_URL}/ipa/redirect.html" "${_envIpa}" )
          fi

          _message="${_message//'%'/'%25'}"
          _message="${_message//$'\n'/'%0A'}"
          _message="${_message//$'\r'/'%0D'}"
          echo "::set-output name=MESSAGE::${_message}"
      - name: Post GitHub comment
        uses: daohoangson/action-comment-on-github@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: ${{ steps.markdown.outputs.MESSAGE }}
